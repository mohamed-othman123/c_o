trigger: none

variables:
  - name: pnpm_config_cache
    value: $(Pipeline.Workspace)/.pnpm-store
  - group: PAT


pool:
  vmImage: ubuntu-latest
steps:
  - task: UseNode@1
    inputs:
      version: '22.x'
    displayName: 'Install Node.js'

  - task: Cache@2
    inputs:
      key: 'pnpm | "$(Agent.OS)" | pnpm-lock.yaml'
      path: $(pnpm_config_cache)
    displayName: Cache pnpm
  - bash: |
      echo "WorkingDir is --> $(pwd)"
      cat <<EOF > ~/.npmrc
      @scb:registry=https://pkgs.dev.azure.com/SCBank/_packaging/core-fe-libs/npm/registry/
      always-auth=true
      //pkgs.dev.azure.com/SCBank/_packaging/core-fe-libs/npm/registry/:_authToken=$(NPM_TOKEN)
      //pkgs.dev.azure.com/SCBank/_packaging/core-fe-libs@Local/npm/registry/:_authToken=${NPM_TOKEN}
      EOF
    displayName: 'Create .npmrc file'
    env:
      NPM_TOKEN: $(NPM_TOKEN)
 
  - script: npm i -g corepack@latest
    displayName: Corepack install

  - script: |
      corepack enable
      corepack prepare pnpm@latest-9 --activate
      pnpm config set store-dir $(pnpm_config_cache)
    displayName: 'Setup pnpm'

  - script: pnpm install
    displayName: 'pnpm install'

  - script: pnpm build
    displayName: 'pnpm build'

  - script: pnpm lint
    displayName: 'pnpm lint'

  - script: pnpm format:check
    displayName: 'pnpm format'

  - script: pnpm test:ci
    displayName: 'pnpm test:ci'

  # Dotnet core sdk task 7.0.x
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk 7.0.x'
    inputs:
      version: 7.0.x

  - script: |
      echo "Listing files in coverage directory:"
      ls -R $(Build.SourcesDirectory)/coverage
    displayName: 'Debug Coverage Directory'

  - task: PublishCodeCoverageResults@2
    inputs:
      summaryFileLocation: $(Build.SourcesDirectory)/coverage/apps/*/cobertura-coverage.xml
